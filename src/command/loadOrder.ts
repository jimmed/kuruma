import { getConfig } from "../lib/configFile";
import { resolveDependencyGraphFromManifests } from "../lib/dependencies";
import { getManifestsFromConfig } from "../lib/manifest";
import { SyncRepositoriesArgs } from "./sync";

export interface OutputLoadOrderArgs extends SyncRepositoriesArgs {}

export const outputLoadOrder = async (args: OutputLoadOrderArgs) => {
  const config = await getConfig(args.config);
  const manifests = await getManifestsFromConfig(config, args.cache);
  const dependencies = resolveDependencyGraphFromManifests(manifests);

  console.log("# GENERATED BY KURUMA (https://npm.im/kuruma-cli)");
  dependencies.loadOrder.forEach((resource) => {
    const annotations = [];
    if (resource.provides !== resource.name) {
      annotations.push(`provided by ${resource.name}`);
    }
    if (resource.hasDependencies) {
      annotations.push(`requires ${resource.requires.join(", ")}`);
    }
    console.log(
      `start ${resource.provides};${
        annotations.length ? ` # ${annotations.join("; ")}` : ""
      }`
    );
  });
};
